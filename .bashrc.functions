# Display notification
# usage: gworl [MESSAGE] [TITLE]
function growl() {
  local s="display notification \"$1\" with title \"$2\""
  test -z "$2" && s="$s sound name \"\""
  osascript -e "$s"
  test -z "$2" || say "$2"
}

# Open file or dir with Visual Studio Code
# usage: vscode [FILE or DIR]
function vscode() {
    VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $*
}

# print HTTP Status Code
# usage: httpstatus [KEYWORD]
function httpstatus() {
    cat <<EOF | grep -i "$1"
100 Continue
101 Switching Protocols
102 Processing
200 OK
201 Created
202 Accepted
203 Non-Authoritative Information
204 No Content
205 Reset Content
206 Partial Content
207 Multi-Status
208 Already Reported
300 Multiple Choices
301 Moved Permanently
302 Found
303 See Other
304 Not Modified
305 Use Proxy
307 Temporary Redirect
400 Bad Request
401 Unauthorized
402 Payment Required
403 Forbidden
404 Not Found
405 Method Not Allowed
406 Not Acceptable
407 Proxy Authentication Required
408 Request Timeout
409 Conflict
410 Gone
411 Length Required
412 Precondition Failed
413 Request Entity Too Large
414 Request-URI Too Large
415 Unsupported Media Type
416 Request Range Not Satisfiable
417 Expectation Failed
418 I'm a teapot
422 Unprocessable Entity
423 Locked
424 Failed Dependency
425 No code
426 Upgrade Required
428 Precondition Required
429 Too Many Requests
431 Request Header Fields Too Large
449 Retry with
500 Internal Server Error
501 Not Implemented
502 Bad Gateway
503 Service Unavailable
504 Gateway Timeout
505 HTTP Version Not Supported
506 Variant Also Negotiates
507 Insufficient Storage
509 Bandwidth Limit Exceeded
510 Not Extended
511 Network Authentication Required 
EOF
}

function repo() {
  cd $(ghq list -p | fzf --ansi --query="$1")
}

function mkr-hosts() {
  if [ -z "$(which mkr)" ]; then
    echo 'mkr command not found' >&2
    return 127
  fi

  local cache=~/.cache/mkr-hosts/cache
  local ttl=1440

  if [ -n "$MACKEREL_APIKEY" ]; then
    cache="$cache.$MACKEREL_APIKEY"
  fi

  if [ ! -r $cache -o -n "$(find \"$cache\" -mmin +$ttl 2>/dev/null)" ]; then
    local cache_dir=$(dirname "$cache")
    mkdir -p "$cache_dir"
    chmod 700 "$cache_dir"

    mkr hosts -f '{{range .}}{{.Name}}{{"\n"}}{{end}}' | tee "$cache"
    chmod 600 "$cache"
  else
    cat "$cache"
  fi
}
