" 全角スペースを表示 {{{
function! ZenkakuSpace()
  highlight ZenkakuSpace cterm=reverse
endfunction

if has('syntax')
  augroup ZenkakuSpace
    autocmd!
    autocmd ColorScheme * call ZenkakuSpace()
    autocmd VimEnter,WinEnter,BufRead * let w:m1=matchadd('ZenkakuSpace', '　')
  augroup END
  call ZenkakuSpace()
endif
" }}} 全角スペースを表示

" ウィンドウ移動時にカーソル行表示を消す {{{
augroup HideCursorLineAtWinLeave
  autocmd!
  autocmd WinLeave * :set nocursorline
  autocmd WinEnter,BufRead * :set cursorline
augroup END
" }}} ウィンドウ移動時にカーソル行表示を消す

" ジャンクファイル作成 {{{
let g:junk_file_basedir=$HOME."/Dropbox/Documents/junk"

function! s:open_junk_file()
  if !exists('g:junk_file_basedir')
    let g:junk_file_basedir = $HOME . '/.vim_junk'
  endif
  let l:junk_file_dir = g:junk_file_basedir . strftime('/%Y/%m')
  if !isdirectory(l:junk_file_dir)
    call mkdir(l:junk_file_dir, 'p')
  endif
  let l:filename = input('Junk Code: ', l:junk_file_dir . strftime('/%Y-%m-%d-%H%M%S.'))
  if l:filename != ''
    execute 'edit ' . l:filename
  endif
endfunction

command! -nargs=0 JunkFile call s:open_junk_file()

nnoremap <Leader>jf :JunkFile<CR>
" }}} ジャンクファイル作成

" ファイル名変更 {{{
command! -nargs=+ -bang -complete=file Rename let pbnr=fnamemodify(bufname('%'), ':p')|exec 'f '.escape(<q-args>, ' ')|w<bang>|call delete(pbnr)
" }}} ファイル名変更

" vim: foldmethod=marker
" vim: foldmarker={{{,}}}
